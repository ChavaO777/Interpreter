1. Specify terminal tokens                                                              DONE!
2. Write grammar rules                                                                  DONE!   
    2.1 Verify that the grammar works                                                   DONE!
3. Declare a C union before declaring the tokens. Outside of the brackets with %'s.

    %union {

        int iValue
        double fValue
        struct node* tree;
    }

4. Build the symbols table                                                              DONE!
5. Design the syntax tree node                                                          DONE!
6. Build the syntax tree

    6.1 Add an enum for the syntax tree node types
    6.2 Write the C code for some (or all) the grammar rules.


7. Write the functions for traversing the syntax tree (executing the program)

## Steps on 11/12/2018

1. Finish the syntax tree traversal
2. Implement the logic for the variable declaration
3. Search in the symbol table when a reference to an identifier is made.
    - set
    - read
    - print
    - expr
5. Implement the use of floats
6. Implement the types checking